#!/usr/bin/env python3
#
#    epipyweb - Epipylon web user interface
#    Copyright (C) 2017  Matt Kimball
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

import contextlib
import datetime
import sqlite3


DATABASE_PATH = '/var/lib/epipyweb/dns.db'


def discard_before(
        db: sqlite3.Connection,
        discard_time: datetime.datetime) -> None:

    'Discard all database entries prior to a particular time'

    discard_iso = discard_time.isoformat()
    print('Discarding prior to {}'.format(discard_iso))

    with contextlib.closing(db.cursor()) as cursor:
        cursor.execute(
            'DELETE FROM querygroup WHERE start_time < ?',
            (discard_iso,))
        cursor.execute(
            'DELETE FROM dnsquery WHERE time < ?',
            (discard_iso,))
        cursor.execute(
            'DELETE FROM querydomain WHERE time < ?',
            (discard_iso,))
        cursor.execute(
            'DELETE FROM dhcpassignment WHERE time < ?',
            (discard_iso,))

    db.commit()


def main():

    'Discard everything from the database prior to a month ago'

    now = datetime.datetime.now()
    one_month = datetime.timedelta(days=30)
    discard_time = now - one_month

    with contextlib.closing(sqlite3.connect(DATABASE_PATH)) as db:
        discard_before(db, discard_time)


if __name__ == '__main__':
    main()
